#coding=utf8

try:
    from . import xspcomm as xsp
except Exception as e:
    import xspcomm as xsp

if __package__ or "." in __name__:
    from .libUT_PreDecode import *
else:
    from libUT_PreDecode import *


class DUTPreDecode(object):

    # initialize
    def __init__(self, *args, **kwargs):
        self.dut = DutUnifiedBase(*args)
        self.xclock = xsp.XClock(self.dut.simStep)
        self.xport  = xsp.XPort()
        self.xclock.Add(self.xport)
        self.event = self.xclock.getEvent()
        # set output files
        if kwargs.get("waveform_filename"):
            self.dut.SetWaveform(kwargs.get("waveform_filename"))
        if kwargs.get("coverage_filename"):
            self.dut.SetCoverage(kwargs.get("coverage_filename"))

        # all Pins
        self.io_in_bits_data_0 = xsp.XPin(xsp.XData(16, xsp.XData.In), self.event)
        self.io_in_bits_data_1 = xsp.XPin(xsp.XData(16, xsp.XData.In), self.event)
        self.io_in_bits_data_2 = xsp.XPin(xsp.XData(16, xsp.XData.In), self.event)
        self.io_in_bits_data_3 = xsp.XPin(xsp.XData(16, xsp.XData.In), self.event)
        self.io_in_bits_data_4 = xsp.XPin(xsp.XData(16, xsp.XData.In), self.event)
        self.io_in_bits_data_5 = xsp.XPin(xsp.XData(16, xsp.XData.In), self.event)
        self.io_in_bits_data_6 = xsp.XPin(xsp.XData(16, xsp.XData.In), self.event)
        self.io_in_bits_data_7 = xsp.XPin(xsp.XData(16, xsp.XData.In), self.event)
        self.io_in_bits_data_8 = xsp.XPin(xsp.XData(16, xsp.XData.In), self.event)
        self.io_in_bits_data_9 = xsp.XPin(xsp.XData(16, xsp.XData.In), self.event)
        self.io_in_bits_data_10 = xsp.XPin(xsp.XData(16, xsp.XData.In), self.event)
        self.io_in_bits_data_11 = xsp.XPin(xsp.XData(16, xsp.XData.In), self.event)
        self.io_in_bits_data_12 = xsp.XPin(xsp.XData(16, xsp.XData.In), self.event)
        self.io_in_bits_data_13 = xsp.XPin(xsp.XData(16, xsp.XData.In), self.event)
        self.io_in_bits_data_14 = xsp.XPin(xsp.XData(16, xsp.XData.In), self.event)
        self.io_in_bits_data_15 = xsp.XPin(xsp.XData(16, xsp.XData.In), self.event)
        self.io_in_bits_data_16 = xsp.XPin(xsp.XData(16, xsp.XData.In), self.event)
        self.io_out_pd_0_isRVC = xsp.XPin(xsp.XData(0, xsp.XData.Out), self.event)
        self.io_out_pd_1_valid = xsp.XPin(xsp.XData(0, xsp.XData.Out), self.event)
        self.io_out_pd_1_isRVC = xsp.XPin(xsp.XData(0, xsp.XData.Out), self.event)
        self.io_out_pd_2_valid = xsp.XPin(xsp.XData(0, xsp.XData.Out), self.event)
        self.io_out_pd_2_isRVC = xsp.XPin(xsp.XData(0, xsp.XData.Out), self.event)
        self.io_out_pd_3_valid = xsp.XPin(xsp.XData(0, xsp.XData.Out), self.event)
        self.io_out_pd_3_isRVC = xsp.XPin(xsp.XData(0, xsp.XData.Out), self.event)
        self.io_out_pd_4_valid = xsp.XPin(xsp.XData(0, xsp.XData.Out), self.event)
        self.io_out_pd_4_isRVC = xsp.XPin(xsp.XData(0, xsp.XData.Out), self.event)
        self.io_out_pd_5_valid = xsp.XPin(xsp.XData(0, xsp.XData.Out), self.event)
        self.io_out_pd_5_isRVC = xsp.XPin(xsp.XData(0, xsp.XData.Out), self.event)
        self.io_out_pd_6_valid = xsp.XPin(xsp.XData(0, xsp.XData.Out), self.event)
        self.io_out_pd_6_isRVC = xsp.XPin(xsp.XData(0, xsp.XData.Out), self.event)
        self.io_out_pd_7_valid = xsp.XPin(xsp.XData(0, xsp.XData.Out), self.event)
        self.io_out_pd_7_isRVC = xsp.XPin(xsp.XData(0, xsp.XData.Out), self.event)
        self.io_out_pd_8_valid = xsp.XPin(xsp.XData(0, xsp.XData.Out), self.event)
        self.io_out_pd_8_isRVC = xsp.XPin(xsp.XData(0, xsp.XData.Out), self.event)
        self.io_out_pd_9_valid = xsp.XPin(xsp.XData(0, xsp.XData.Out), self.event)
        self.io_out_pd_9_isRVC = xsp.XPin(xsp.XData(0, xsp.XData.Out), self.event)
        self.io_out_pd_10_valid = xsp.XPin(xsp.XData(0, xsp.XData.Out), self.event)
        self.io_out_pd_10_isRVC = xsp.XPin(xsp.XData(0, xsp.XData.Out), self.event)
        self.io_out_pd_11_valid = xsp.XPin(xsp.XData(0, xsp.XData.Out), self.event)
        self.io_out_pd_11_isRVC = xsp.XPin(xsp.XData(0, xsp.XData.Out), self.event)
        self.io_out_pd_12_valid = xsp.XPin(xsp.XData(0, xsp.XData.Out), self.event)
        self.io_out_pd_12_isRVC = xsp.XPin(xsp.XData(0, xsp.XData.Out), self.event)
        self.io_out_pd_13_valid = xsp.XPin(xsp.XData(0, xsp.XData.Out), self.event)
        self.io_out_pd_13_isRVC = xsp.XPin(xsp.XData(0, xsp.XData.Out), self.event)
        self.io_out_pd_14_valid = xsp.XPin(xsp.XData(0, xsp.XData.Out), self.event)
        self.io_out_pd_14_isRVC = xsp.XPin(xsp.XData(0, xsp.XData.Out), self.event)
        self.io_out_pd_15_valid = xsp.XPin(xsp.XData(0, xsp.XData.Out), self.event)
        self.io_out_pd_15_isRVC = xsp.XPin(xsp.XData(0, xsp.XData.Out), self.event)
        self.io_out_hasHalfValid_2 = xsp.XPin(xsp.XData(0, xsp.XData.Out), self.event)
        self.io_out_hasHalfValid_3 = xsp.XPin(xsp.XData(0, xsp.XData.Out), self.event)
        self.io_out_hasHalfValid_4 = xsp.XPin(xsp.XData(0, xsp.XData.Out), self.event)
        self.io_out_hasHalfValid_5 = xsp.XPin(xsp.XData(0, xsp.XData.Out), self.event)
        self.io_out_hasHalfValid_6 = xsp.XPin(xsp.XData(0, xsp.XData.Out), self.event)
        self.io_out_hasHalfValid_7 = xsp.XPin(xsp.XData(0, xsp.XData.Out), self.event)
        self.io_out_hasHalfValid_8 = xsp.XPin(xsp.XData(0, xsp.XData.Out), self.event)
        self.io_out_hasHalfValid_9 = xsp.XPin(xsp.XData(0, xsp.XData.Out), self.event)
        self.io_out_hasHalfValid_10 = xsp.XPin(xsp.XData(0, xsp.XData.Out), self.event)
        self.io_out_hasHalfValid_11 = xsp.XPin(xsp.XData(0, xsp.XData.Out), self.event)
        self.io_out_hasHalfValid_12 = xsp.XPin(xsp.XData(0, xsp.XData.Out), self.event)
        self.io_out_hasHalfValid_13 = xsp.XPin(xsp.XData(0, xsp.XData.Out), self.event)
        self.io_out_hasHalfValid_14 = xsp.XPin(xsp.XData(0, xsp.XData.Out), self.event)
        self.io_out_hasHalfValid_15 = xsp.XPin(xsp.XData(0, xsp.XData.Out), self.event)
        self.io_out_instr_0 = xsp.XPin(xsp.XData(32, xsp.XData.Out), self.event)
        self.io_out_instr_1 = xsp.XPin(xsp.XData(32, xsp.XData.Out), self.event)
        self.io_out_instr_2 = xsp.XPin(xsp.XData(32, xsp.XData.Out), self.event)
        self.io_out_instr_3 = xsp.XPin(xsp.XData(32, xsp.XData.Out), self.event)
        self.io_out_instr_4 = xsp.XPin(xsp.XData(32, xsp.XData.Out), self.event)
        self.io_out_instr_5 = xsp.XPin(xsp.XData(32, xsp.XData.Out), self.event)
        self.io_out_instr_6 = xsp.XPin(xsp.XData(32, xsp.XData.Out), self.event)
        self.io_out_instr_7 = xsp.XPin(xsp.XData(32, xsp.XData.Out), self.event)
        self.io_out_instr_8 = xsp.XPin(xsp.XData(32, xsp.XData.Out), self.event)
        self.io_out_instr_9 = xsp.XPin(xsp.XData(32, xsp.XData.Out), self.event)
        self.io_out_instr_10 = xsp.XPin(xsp.XData(32, xsp.XData.Out), self.event)
        self.io_out_instr_11 = xsp.XPin(xsp.XData(32, xsp.XData.Out), self.event)
        self.io_out_instr_12 = xsp.XPin(xsp.XData(32, xsp.XData.Out), self.event)
        self.io_out_instr_13 = xsp.XPin(xsp.XData(32, xsp.XData.Out), self.event)
        self.io_out_instr_14 = xsp.XPin(xsp.XData(32, xsp.XData.Out), self.event)
        self.io_out_instr_15 = xsp.XPin(xsp.XData(32, xsp.XData.Out), self.event)
        self.io_out_jumpOffset_0 = xsp.XPin(xsp.XData(64, xsp.XData.Out), self.event)
        self.io_out_jumpOffset_1 = xsp.XPin(xsp.XData(64, xsp.XData.Out), self.event)
        self.io_out_jumpOffset_2 = xsp.XPin(xsp.XData(64, xsp.XData.Out), self.event)
        self.io_out_jumpOffset_3 = xsp.XPin(xsp.XData(64, xsp.XData.Out), self.event)
        self.io_out_jumpOffset_4 = xsp.XPin(xsp.XData(64, xsp.XData.Out), self.event)
        self.io_out_jumpOffset_5 = xsp.XPin(xsp.XData(64, xsp.XData.Out), self.event)
        self.io_out_jumpOffset_6 = xsp.XPin(xsp.XData(64, xsp.XData.Out), self.event)
        self.io_out_jumpOffset_7 = xsp.XPin(xsp.XData(64, xsp.XData.Out), self.event)
        self.io_out_jumpOffset_8 = xsp.XPin(xsp.XData(64, xsp.XData.Out), self.event)
        self.io_out_jumpOffset_9 = xsp.XPin(xsp.XData(64, xsp.XData.Out), self.event)
        self.io_out_jumpOffset_10 = xsp.XPin(xsp.XData(64, xsp.XData.Out), self.event)
        self.io_out_jumpOffset_11 = xsp.XPin(xsp.XData(64, xsp.XData.Out), self.event)
        self.io_out_jumpOffset_12 = xsp.XPin(xsp.XData(64, xsp.XData.Out), self.event)
        self.io_out_jumpOffset_13 = xsp.XPin(xsp.XData(64, xsp.XData.Out), self.event)
        self.io_out_jumpOffset_14 = xsp.XPin(xsp.XData(64, xsp.XData.Out), self.event)
        self.io_out_jumpOffset_15 = xsp.XPin(xsp.XData(64, xsp.XData.Out), self.event)
        self.PreDecode_currentIsRVC_0 = xsp.XPin(xsp.XData(0, xsp.XData.Out), self.event)
        self.PreDecode_currentIsRVC_1 = xsp.XPin(xsp.XData(0, xsp.XData.Out), self.event)
        self.PreDecode_currentIsRVC_2 = xsp.XPin(xsp.XData(0, xsp.XData.Out), self.event)
        self.PreDecode_currentIsRVC_3 = xsp.XPin(xsp.XData(0, xsp.XData.Out), self.event)
        self.PreDecode_currentIsRVC_4 = xsp.XPin(xsp.XData(0, xsp.XData.Out), self.event)
        self.PreDecode_currentIsRVC_5 = xsp.XPin(xsp.XData(0, xsp.XData.Out), self.event)
        self.PreDecode_currentIsRVC_6 = xsp.XPin(xsp.XData(0, xsp.XData.Out), self.event)
        self.PreDecode_currentIsRVC_7 = xsp.XPin(xsp.XData(0, xsp.XData.Out), self.event)
        self.PreDecode_currentIsRVC_8 = xsp.XPin(xsp.XData(0, xsp.XData.Out), self.event)
        self.PreDecode_currentIsRVC_9 = xsp.XPin(xsp.XData(0, xsp.XData.Out), self.event)
        self.PreDecode_currentIsRVC_10 = xsp.XPin(xsp.XData(0, xsp.XData.Out), self.event)
        self.PreDecode_currentIsRVC_11 = xsp.XPin(xsp.XData(0, xsp.XData.Out), self.event)
        self.PreDecode_currentIsRVC_12 = xsp.XPin(xsp.XData(0, xsp.XData.Out), self.event)
        self.PreDecode_currentIsRVC_13 = xsp.XPin(xsp.XData(0, xsp.XData.Out), self.event)
        self.PreDecode_currentIsRVC_14 = xsp.XPin(xsp.XData(0, xsp.XData.Out), self.event)
        self.PreDecode_currentIsRVC_15 = xsp.XPin(xsp.XData(0, xsp.XData.Out), self.event)
        self.PreDecode_validEnd_1 = xsp.XPin(xsp.XData(0, xsp.XData.Out), self.event)
        self.PreDecode_validEnd_2 = xsp.XPin(xsp.XData(0, xsp.XData.Out), self.event)
        self.PreDecode_h_validEnd_2 = xsp.XPin(xsp.XData(0, xsp.XData.Out), self.event)
        self.PreDecode_validEnd_3 = xsp.XPin(xsp.XData(0, xsp.XData.Out), self.event)
        self.PreDecode_h_validEnd_3 = xsp.XPin(xsp.XData(0, xsp.XData.Out), self.event)
        self.PreDecode_validEnd_4 = xsp.XPin(xsp.XData(0, xsp.XData.Out), self.event)
        self.PreDecode_h_validEnd_4 = xsp.XPin(xsp.XData(0, xsp.XData.Out), self.event)
        self.PreDecode_validEnd_5 = xsp.XPin(xsp.XData(0, xsp.XData.Out), self.event)
        self.PreDecode_h_validEnd_5 = xsp.XPin(xsp.XData(0, xsp.XData.Out), self.event)
        self.PreDecode_validEnd_6 = xsp.XPin(xsp.XData(0, xsp.XData.Out), self.event)
        self.PreDecode_h_validEnd_6 = xsp.XPin(xsp.XData(0, xsp.XData.Out), self.event)
        self.PreDecode_validEnd_7 = xsp.XPin(xsp.XData(0, xsp.XData.Out), self.event)
        self.PreDecode_h_validEnd_7 = xsp.XPin(xsp.XData(0, xsp.XData.Out), self.event)
        self.PreDecode_lastIsValidEnd_23 = xsp.XPin(xsp.XData(0, xsp.XData.Out), self.event)
        self.PreDecode_h_lastIsValidEnd_23 = xsp.XPin(xsp.XData(0, xsp.XData.Out), self.event)
        self.PreDecode_lastIsValidEnd_24 = xsp.XPin(xsp.XData(0, xsp.XData.Out), self.event)
        self.PreDecode_h_lastIsValidEnd_24 = xsp.XPin(xsp.XData(0, xsp.XData.Out), self.event)
        self.PreDecode_lastIsValidEnd_25 = xsp.XPin(xsp.XData(0, xsp.XData.Out), self.event)
        self.PreDecode_h_lastIsValidEnd_25 = xsp.XPin(xsp.XData(0, xsp.XData.Out), self.event)
        self.PreDecode_lastIsValidEnd_26 = xsp.XPin(xsp.XData(0, xsp.XData.Out), self.event)
        self.PreDecode_h_lastIsValidEnd_26 = xsp.XPin(xsp.XData(0, xsp.XData.Out), self.event)
        self.PreDecode_lastIsValidEnd_27 = xsp.XPin(xsp.XData(0, xsp.XData.Out), self.event)
        self.PreDecode_h_lastIsValidEnd_27 = xsp.XPin(xsp.XData(0, xsp.XData.Out), self.event)
        self.PreDecode_lastIsValidEnd_30 = xsp.XPin(xsp.XData(0, xsp.XData.Out), self.event)
        self.PreDecode_h_lastIsValidEnd_30 = xsp.XPin(xsp.XData(0, xsp.XData.Out), self.event)
        self.PreDecode_lastIsValidEnd_31 = xsp.XPin(xsp.XData(0, xsp.XData.Out), self.event)
        self.PreDecode_h_lastIsValidEnd_31 = xsp.XPin(xsp.XData(0, xsp.XData.Out), self.event)
        self.PreDecode_lastIsValidEnd_32 = xsp.XPin(xsp.XData(0, xsp.XData.Out), self.event)
        self.PreDecode_h_lastIsValidEnd_32 = xsp.XPin(xsp.XData(0, xsp.XData.Out), self.event)
        self.PreDecode_lastIsValidEnd_33 = xsp.XPin(xsp.XData(0, xsp.XData.Out), self.event)
        self.PreDecode_h_lastIsValidEnd_33 = xsp.XPin(xsp.XData(0, xsp.XData.Out), self.event)


        # BindDPI
        self.io_in_bits_data_0.BindDPIPtr(self.dut.GetDPIHandle("io_in_bits_data_0", 0), self.dut.GetDPIHandle("io_in_bits_data_0", 1))
        self.io_in_bits_data_1.BindDPIPtr(self.dut.GetDPIHandle("io_in_bits_data_1", 0), self.dut.GetDPIHandle("io_in_bits_data_1", 1))
        self.io_in_bits_data_2.BindDPIPtr(self.dut.GetDPIHandle("io_in_bits_data_2", 0), self.dut.GetDPIHandle("io_in_bits_data_2", 1))
        self.io_in_bits_data_3.BindDPIPtr(self.dut.GetDPIHandle("io_in_bits_data_3", 0), self.dut.GetDPIHandle("io_in_bits_data_3", 1))
        self.io_in_bits_data_4.BindDPIPtr(self.dut.GetDPIHandle("io_in_bits_data_4", 0), self.dut.GetDPIHandle("io_in_bits_data_4", 1))
        self.io_in_bits_data_5.BindDPIPtr(self.dut.GetDPIHandle("io_in_bits_data_5", 0), self.dut.GetDPIHandle("io_in_bits_data_5", 1))
        self.io_in_bits_data_6.BindDPIPtr(self.dut.GetDPIHandle("io_in_bits_data_6", 0), self.dut.GetDPIHandle("io_in_bits_data_6", 1))
        self.io_in_bits_data_7.BindDPIPtr(self.dut.GetDPIHandle("io_in_bits_data_7", 0), self.dut.GetDPIHandle("io_in_bits_data_7", 1))
        self.io_in_bits_data_8.BindDPIPtr(self.dut.GetDPIHandle("io_in_bits_data_8", 0), self.dut.GetDPIHandle("io_in_bits_data_8", 1))
        self.io_in_bits_data_9.BindDPIPtr(self.dut.GetDPIHandle("io_in_bits_data_9", 0), self.dut.GetDPIHandle("io_in_bits_data_9", 1))
        self.io_in_bits_data_10.BindDPIPtr(self.dut.GetDPIHandle("io_in_bits_data_10", 0), self.dut.GetDPIHandle("io_in_bits_data_10", 1))
        self.io_in_bits_data_11.BindDPIPtr(self.dut.GetDPIHandle("io_in_bits_data_11", 0), self.dut.GetDPIHandle("io_in_bits_data_11", 1))
        self.io_in_bits_data_12.BindDPIPtr(self.dut.GetDPIHandle("io_in_bits_data_12", 0), self.dut.GetDPIHandle("io_in_bits_data_12", 1))
        self.io_in_bits_data_13.BindDPIPtr(self.dut.GetDPIHandle("io_in_bits_data_13", 0), self.dut.GetDPIHandle("io_in_bits_data_13", 1))
        self.io_in_bits_data_14.BindDPIPtr(self.dut.GetDPIHandle("io_in_bits_data_14", 0), self.dut.GetDPIHandle("io_in_bits_data_14", 1))
        self.io_in_bits_data_15.BindDPIPtr(self.dut.GetDPIHandle("io_in_bits_data_15", 0), self.dut.GetDPIHandle("io_in_bits_data_15", 1))
        self.io_in_bits_data_16.BindDPIPtr(self.dut.GetDPIHandle("io_in_bits_data_16", 0), self.dut.GetDPIHandle("io_in_bits_data_16", 1))
        self.io_out_pd_0_isRVC.BindDPIPtr(self.dut.GetDPIHandle("io_out_pd_0_isRVC", 0), self.dut.GetDPIHandle("io_out_pd_0_isRVC", 1))
        self.io_out_pd_1_valid.BindDPIPtr(self.dut.GetDPIHandle("io_out_pd_1_valid", 0), self.dut.GetDPIHandle("io_out_pd_1_valid", 1))
        self.io_out_pd_1_isRVC.BindDPIPtr(self.dut.GetDPIHandle("io_out_pd_1_isRVC", 0), self.dut.GetDPIHandle("io_out_pd_1_isRVC", 1))
        self.io_out_pd_2_valid.BindDPIPtr(self.dut.GetDPIHandle("io_out_pd_2_valid", 0), self.dut.GetDPIHandle("io_out_pd_2_valid", 1))
        self.io_out_pd_2_isRVC.BindDPIPtr(self.dut.GetDPIHandle("io_out_pd_2_isRVC", 0), self.dut.GetDPIHandle("io_out_pd_2_isRVC", 1))
        self.io_out_pd_3_valid.BindDPIPtr(self.dut.GetDPIHandle("io_out_pd_3_valid", 0), self.dut.GetDPIHandle("io_out_pd_3_valid", 1))
        self.io_out_pd_3_isRVC.BindDPIPtr(self.dut.GetDPIHandle("io_out_pd_3_isRVC", 0), self.dut.GetDPIHandle("io_out_pd_3_isRVC", 1))
        self.io_out_pd_4_valid.BindDPIPtr(self.dut.GetDPIHandle("io_out_pd_4_valid", 0), self.dut.GetDPIHandle("io_out_pd_4_valid", 1))
        self.io_out_pd_4_isRVC.BindDPIPtr(self.dut.GetDPIHandle("io_out_pd_4_isRVC", 0), self.dut.GetDPIHandle("io_out_pd_4_isRVC", 1))
        self.io_out_pd_5_valid.BindDPIPtr(self.dut.GetDPIHandle("io_out_pd_5_valid", 0), self.dut.GetDPIHandle("io_out_pd_5_valid", 1))
        self.io_out_pd_5_isRVC.BindDPIPtr(self.dut.GetDPIHandle("io_out_pd_5_isRVC", 0), self.dut.GetDPIHandle("io_out_pd_5_isRVC", 1))
        self.io_out_pd_6_valid.BindDPIPtr(self.dut.GetDPIHandle("io_out_pd_6_valid", 0), self.dut.GetDPIHandle("io_out_pd_6_valid", 1))
        self.io_out_pd_6_isRVC.BindDPIPtr(self.dut.GetDPIHandle("io_out_pd_6_isRVC", 0), self.dut.GetDPIHandle("io_out_pd_6_isRVC", 1))
        self.io_out_pd_7_valid.BindDPIPtr(self.dut.GetDPIHandle("io_out_pd_7_valid", 0), self.dut.GetDPIHandle("io_out_pd_7_valid", 1))
        self.io_out_pd_7_isRVC.BindDPIPtr(self.dut.GetDPIHandle("io_out_pd_7_isRVC", 0), self.dut.GetDPIHandle("io_out_pd_7_isRVC", 1))
        self.io_out_pd_8_valid.BindDPIPtr(self.dut.GetDPIHandle("io_out_pd_8_valid", 0), self.dut.GetDPIHandle("io_out_pd_8_valid", 1))
        self.io_out_pd_8_isRVC.BindDPIPtr(self.dut.GetDPIHandle("io_out_pd_8_isRVC", 0), self.dut.GetDPIHandle("io_out_pd_8_isRVC", 1))
        self.io_out_pd_9_valid.BindDPIPtr(self.dut.GetDPIHandle("io_out_pd_9_valid", 0), self.dut.GetDPIHandle("io_out_pd_9_valid", 1))
        self.io_out_pd_9_isRVC.BindDPIPtr(self.dut.GetDPIHandle("io_out_pd_9_isRVC", 0), self.dut.GetDPIHandle("io_out_pd_9_isRVC", 1))
        self.io_out_pd_10_valid.BindDPIPtr(self.dut.GetDPIHandle("io_out_pd_10_valid", 0), self.dut.GetDPIHandle("io_out_pd_10_valid", 1))
        self.io_out_pd_10_isRVC.BindDPIPtr(self.dut.GetDPIHandle("io_out_pd_10_isRVC", 0), self.dut.GetDPIHandle("io_out_pd_10_isRVC", 1))
        self.io_out_pd_11_valid.BindDPIPtr(self.dut.GetDPIHandle("io_out_pd_11_valid", 0), self.dut.GetDPIHandle("io_out_pd_11_valid", 1))
        self.io_out_pd_11_isRVC.BindDPIPtr(self.dut.GetDPIHandle("io_out_pd_11_isRVC", 0), self.dut.GetDPIHandle("io_out_pd_11_isRVC", 1))
        self.io_out_pd_12_valid.BindDPIPtr(self.dut.GetDPIHandle("io_out_pd_12_valid", 0), self.dut.GetDPIHandle("io_out_pd_12_valid", 1))
        self.io_out_pd_12_isRVC.BindDPIPtr(self.dut.GetDPIHandle("io_out_pd_12_isRVC", 0), self.dut.GetDPIHandle("io_out_pd_12_isRVC", 1))
        self.io_out_pd_13_valid.BindDPIPtr(self.dut.GetDPIHandle("io_out_pd_13_valid", 0), self.dut.GetDPIHandle("io_out_pd_13_valid", 1))
        self.io_out_pd_13_isRVC.BindDPIPtr(self.dut.GetDPIHandle("io_out_pd_13_isRVC", 0), self.dut.GetDPIHandle("io_out_pd_13_isRVC", 1))
        self.io_out_pd_14_valid.BindDPIPtr(self.dut.GetDPIHandle("io_out_pd_14_valid", 0), self.dut.GetDPIHandle("io_out_pd_14_valid", 1))
        self.io_out_pd_14_isRVC.BindDPIPtr(self.dut.GetDPIHandle("io_out_pd_14_isRVC", 0), self.dut.GetDPIHandle("io_out_pd_14_isRVC", 1))
        self.io_out_pd_15_valid.BindDPIPtr(self.dut.GetDPIHandle("io_out_pd_15_valid", 0), self.dut.GetDPIHandle("io_out_pd_15_valid", 1))
        self.io_out_pd_15_isRVC.BindDPIPtr(self.dut.GetDPIHandle("io_out_pd_15_isRVC", 0), self.dut.GetDPIHandle("io_out_pd_15_isRVC", 1))
        self.io_out_hasHalfValid_2.BindDPIPtr(self.dut.GetDPIHandle("io_out_hasHalfValid_2", 0), self.dut.GetDPIHandle("io_out_hasHalfValid_2", 1))
        self.io_out_hasHalfValid_3.BindDPIPtr(self.dut.GetDPIHandle("io_out_hasHalfValid_3", 0), self.dut.GetDPIHandle("io_out_hasHalfValid_3", 1))
        self.io_out_hasHalfValid_4.BindDPIPtr(self.dut.GetDPIHandle("io_out_hasHalfValid_4", 0), self.dut.GetDPIHandle("io_out_hasHalfValid_4", 1))
        self.io_out_hasHalfValid_5.BindDPIPtr(self.dut.GetDPIHandle("io_out_hasHalfValid_5", 0), self.dut.GetDPIHandle("io_out_hasHalfValid_5", 1))
        self.io_out_hasHalfValid_6.BindDPIPtr(self.dut.GetDPIHandle("io_out_hasHalfValid_6", 0), self.dut.GetDPIHandle("io_out_hasHalfValid_6", 1))
        self.io_out_hasHalfValid_7.BindDPIPtr(self.dut.GetDPIHandle("io_out_hasHalfValid_7", 0), self.dut.GetDPIHandle("io_out_hasHalfValid_7", 1))
        self.io_out_hasHalfValid_8.BindDPIPtr(self.dut.GetDPIHandle("io_out_hasHalfValid_8", 0), self.dut.GetDPIHandle("io_out_hasHalfValid_8", 1))
        self.io_out_hasHalfValid_9.BindDPIPtr(self.dut.GetDPIHandle("io_out_hasHalfValid_9", 0), self.dut.GetDPIHandle("io_out_hasHalfValid_9", 1))
        self.io_out_hasHalfValid_10.BindDPIPtr(self.dut.GetDPIHandle("io_out_hasHalfValid_10", 0), self.dut.GetDPIHandle("io_out_hasHalfValid_10", 1))
        self.io_out_hasHalfValid_11.BindDPIPtr(self.dut.GetDPIHandle("io_out_hasHalfValid_11", 0), self.dut.GetDPIHandle("io_out_hasHalfValid_11", 1))
        self.io_out_hasHalfValid_12.BindDPIPtr(self.dut.GetDPIHandle("io_out_hasHalfValid_12", 0), self.dut.GetDPIHandle("io_out_hasHalfValid_12", 1))
        self.io_out_hasHalfValid_13.BindDPIPtr(self.dut.GetDPIHandle("io_out_hasHalfValid_13", 0), self.dut.GetDPIHandle("io_out_hasHalfValid_13", 1))
        self.io_out_hasHalfValid_14.BindDPIPtr(self.dut.GetDPIHandle("io_out_hasHalfValid_14", 0), self.dut.GetDPIHandle("io_out_hasHalfValid_14", 1))
        self.io_out_hasHalfValid_15.BindDPIPtr(self.dut.GetDPIHandle("io_out_hasHalfValid_15", 0), self.dut.GetDPIHandle("io_out_hasHalfValid_15", 1))
        self.io_out_instr_0.BindDPIPtr(self.dut.GetDPIHandle("io_out_instr_0", 0), self.dut.GetDPIHandle("io_out_instr_0", 1))
        self.io_out_instr_1.BindDPIPtr(self.dut.GetDPIHandle("io_out_instr_1", 0), self.dut.GetDPIHandle("io_out_instr_1", 1))
        self.io_out_instr_2.BindDPIPtr(self.dut.GetDPIHandle("io_out_instr_2", 0), self.dut.GetDPIHandle("io_out_instr_2", 1))
        self.io_out_instr_3.BindDPIPtr(self.dut.GetDPIHandle("io_out_instr_3", 0), self.dut.GetDPIHandle("io_out_instr_3", 1))
        self.io_out_instr_4.BindDPIPtr(self.dut.GetDPIHandle("io_out_instr_4", 0), self.dut.GetDPIHandle("io_out_instr_4", 1))
        self.io_out_instr_5.BindDPIPtr(self.dut.GetDPIHandle("io_out_instr_5", 0), self.dut.GetDPIHandle("io_out_instr_5", 1))
        self.io_out_instr_6.BindDPIPtr(self.dut.GetDPIHandle("io_out_instr_6", 0), self.dut.GetDPIHandle("io_out_instr_6", 1))
        self.io_out_instr_7.BindDPIPtr(self.dut.GetDPIHandle("io_out_instr_7", 0), self.dut.GetDPIHandle("io_out_instr_7", 1))
        self.io_out_instr_8.BindDPIPtr(self.dut.GetDPIHandle("io_out_instr_8", 0), self.dut.GetDPIHandle("io_out_instr_8", 1))
        self.io_out_instr_9.BindDPIPtr(self.dut.GetDPIHandle("io_out_instr_9", 0), self.dut.GetDPIHandle("io_out_instr_9", 1))
        self.io_out_instr_10.BindDPIPtr(self.dut.GetDPIHandle("io_out_instr_10", 0), self.dut.GetDPIHandle("io_out_instr_10", 1))
        self.io_out_instr_11.BindDPIPtr(self.dut.GetDPIHandle("io_out_instr_11", 0), self.dut.GetDPIHandle("io_out_instr_11", 1))
        self.io_out_instr_12.BindDPIPtr(self.dut.GetDPIHandle("io_out_instr_12", 0), self.dut.GetDPIHandle("io_out_instr_12", 1))
        self.io_out_instr_13.BindDPIPtr(self.dut.GetDPIHandle("io_out_instr_13", 0), self.dut.GetDPIHandle("io_out_instr_13", 1))
        self.io_out_instr_14.BindDPIPtr(self.dut.GetDPIHandle("io_out_instr_14", 0), self.dut.GetDPIHandle("io_out_instr_14", 1))
        self.io_out_instr_15.BindDPIPtr(self.dut.GetDPIHandle("io_out_instr_15", 0), self.dut.GetDPIHandle("io_out_instr_15", 1))
        self.io_out_jumpOffset_0.BindDPIPtr(self.dut.GetDPIHandle("io_out_jumpOffset_0", 0), self.dut.GetDPIHandle("io_out_jumpOffset_0", 1))
        self.io_out_jumpOffset_1.BindDPIPtr(self.dut.GetDPIHandle("io_out_jumpOffset_1", 0), self.dut.GetDPIHandle("io_out_jumpOffset_1", 1))
        self.io_out_jumpOffset_2.BindDPIPtr(self.dut.GetDPIHandle("io_out_jumpOffset_2", 0), self.dut.GetDPIHandle("io_out_jumpOffset_2", 1))
        self.io_out_jumpOffset_3.BindDPIPtr(self.dut.GetDPIHandle("io_out_jumpOffset_3", 0), self.dut.GetDPIHandle("io_out_jumpOffset_3", 1))
        self.io_out_jumpOffset_4.BindDPIPtr(self.dut.GetDPIHandle("io_out_jumpOffset_4", 0), self.dut.GetDPIHandle("io_out_jumpOffset_4", 1))
        self.io_out_jumpOffset_5.BindDPIPtr(self.dut.GetDPIHandle("io_out_jumpOffset_5", 0), self.dut.GetDPIHandle("io_out_jumpOffset_5", 1))
        self.io_out_jumpOffset_6.BindDPIPtr(self.dut.GetDPIHandle("io_out_jumpOffset_6", 0), self.dut.GetDPIHandle("io_out_jumpOffset_6", 1))
        self.io_out_jumpOffset_7.BindDPIPtr(self.dut.GetDPIHandle("io_out_jumpOffset_7", 0), self.dut.GetDPIHandle("io_out_jumpOffset_7", 1))
        self.io_out_jumpOffset_8.BindDPIPtr(self.dut.GetDPIHandle("io_out_jumpOffset_8", 0), self.dut.GetDPIHandle("io_out_jumpOffset_8", 1))
        self.io_out_jumpOffset_9.BindDPIPtr(self.dut.GetDPIHandle("io_out_jumpOffset_9", 0), self.dut.GetDPIHandle("io_out_jumpOffset_9", 1))
        self.io_out_jumpOffset_10.BindDPIPtr(self.dut.GetDPIHandle("io_out_jumpOffset_10", 0), self.dut.GetDPIHandle("io_out_jumpOffset_10", 1))
        self.io_out_jumpOffset_11.BindDPIPtr(self.dut.GetDPIHandle("io_out_jumpOffset_11", 0), self.dut.GetDPIHandle("io_out_jumpOffset_11", 1))
        self.io_out_jumpOffset_12.BindDPIPtr(self.dut.GetDPIHandle("io_out_jumpOffset_12", 0), self.dut.GetDPIHandle("io_out_jumpOffset_12", 1))
        self.io_out_jumpOffset_13.BindDPIPtr(self.dut.GetDPIHandle("io_out_jumpOffset_13", 0), self.dut.GetDPIHandle("io_out_jumpOffset_13", 1))
        self.io_out_jumpOffset_14.BindDPIPtr(self.dut.GetDPIHandle("io_out_jumpOffset_14", 0), self.dut.GetDPIHandle("io_out_jumpOffset_14", 1))
        self.io_out_jumpOffset_15.BindDPIPtr(self.dut.GetDPIHandle("io_out_jumpOffset_15", 0), self.dut.GetDPIHandle("io_out_jumpOffset_15", 1))
        self.PreDecode_currentIsRVC_0.BindDPIPtr(self.dut.GetDPIHandle("PreDecode_currentIsRVC_0", 0), self.dut.GetDPIHandle("PreDecode_currentIsRVC_0", 1))
        self.PreDecode_currentIsRVC_1.BindDPIPtr(self.dut.GetDPIHandle("PreDecode_currentIsRVC_1", 0), self.dut.GetDPIHandle("PreDecode_currentIsRVC_1", 1))
        self.PreDecode_currentIsRVC_2.BindDPIPtr(self.dut.GetDPIHandle("PreDecode_currentIsRVC_2", 0), self.dut.GetDPIHandle("PreDecode_currentIsRVC_2", 1))
        self.PreDecode_currentIsRVC_3.BindDPIPtr(self.dut.GetDPIHandle("PreDecode_currentIsRVC_3", 0), self.dut.GetDPIHandle("PreDecode_currentIsRVC_3", 1))
        self.PreDecode_currentIsRVC_4.BindDPIPtr(self.dut.GetDPIHandle("PreDecode_currentIsRVC_4", 0), self.dut.GetDPIHandle("PreDecode_currentIsRVC_4", 1))
        self.PreDecode_currentIsRVC_5.BindDPIPtr(self.dut.GetDPIHandle("PreDecode_currentIsRVC_5", 0), self.dut.GetDPIHandle("PreDecode_currentIsRVC_5", 1))
        self.PreDecode_currentIsRVC_6.BindDPIPtr(self.dut.GetDPIHandle("PreDecode_currentIsRVC_6", 0), self.dut.GetDPIHandle("PreDecode_currentIsRVC_6", 1))
        self.PreDecode_currentIsRVC_7.BindDPIPtr(self.dut.GetDPIHandle("PreDecode_currentIsRVC_7", 0), self.dut.GetDPIHandle("PreDecode_currentIsRVC_7", 1))
        self.PreDecode_currentIsRVC_8.BindDPIPtr(self.dut.GetDPIHandle("PreDecode_currentIsRVC_8", 0), self.dut.GetDPIHandle("PreDecode_currentIsRVC_8", 1))
        self.PreDecode_currentIsRVC_9.BindDPIPtr(self.dut.GetDPIHandle("PreDecode_currentIsRVC_9", 0), self.dut.GetDPIHandle("PreDecode_currentIsRVC_9", 1))
        self.PreDecode_currentIsRVC_10.BindDPIPtr(self.dut.GetDPIHandle("PreDecode_currentIsRVC_10", 0), self.dut.GetDPIHandle("PreDecode_currentIsRVC_10", 1))
        self.PreDecode_currentIsRVC_11.BindDPIPtr(self.dut.GetDPIHandle("PreDecode_currentIsRVC_11", 0), self.dut.GetDPIHandle("PreDecode_currentIsRVC_11", 1))
        self.PreDecode_currentIsRVC_12.BindDPIPtr(self.dut.GetDPIHandle("PreDecode_currentIsRVC_12", 0), self.dut.GetDPIHandle("PreDecode_currentIsRVC_12", 1))
        self.PreDecode_currentIsRVC_13.BindDPIPtr(self.dut.GetDPIHandle("PreDecode_currentIsRVC_13", 0), self.dut.GetDPIHandle("PreDecode_currentIsRVC_13", 1))
        self.PreDecode_currentIsRVC_14.BindDPIPtr(self.dut.GetDPIHandle("PreDecode_currentIsRVC_14", 0), self.dut.GetDPIHandle("PreDecode_currentIsRVC_14", 1))
        self.PreDecode_currentIsRVC_15.BindDPIPtr(self.dut.GetDPIHandle("PreDecode_currentIsRVC_15", 0), self.dut.GetDPIHandle("PreDecode_currentIsRVC_15", 1))
        self.PreDecode_validEnd_1.BindDPIPtr(self.dut.GetDPIHandle("PreDecode_validEnd_1", 0), self.dut.GetDPIHandle("PreDecode_validEnd_1", 1))
        self.PreDecode_validEnd_2.BindDPIPtr(self.dut.GetDPIHandle("PreDecode_validEnd_2", 0), self.dut.GetDPIHandle("PreDecode_validEnd_2", 1))
        self.PreDecode_h_validEnd_2.BindDPIPtr(self.dut.GetDPIHandle("PreDecode_h_validEnd_2", 0), self.dut.GetDPIHandle("PreDecode_h_validEnd_2", 1))
        self.PreDecode_validEnd_3.BindDPIPtr(self.dut.GetDPIHandle("PreDecode_validEnd_3", 0), self.dut.GetDPIHandle("PreDecode_validEnd_3", 1))
        self.PreDecode_h_validEnd_3.BindDPIPtr(self.dut.GetDPIHandle("PreDecode_h_validEnd_3", 0), self.dut.GetDPIHandle("PreDecode_h_validEnd_3", 1))
        self.PreDecode_validEnd_4.BindDPIPtr(self.dut.GetDPIHandle("PreDecode_validEnd_4", 0), self.dut.GetDPIHandle("PreDecode_validEnd_4", 1))
        self.PreDecode_h_validEnd_4.BindDPIPtr(self.dut.GetDPIHandle("PreDecode_h_validEnd_4", 0), self.dut.GetDPIHandle("PreDecode_h_validEnd_4", 1))
        self.PreDecode_validEnd_5.BindDPIPtr(self.dut.GetDPIHandle("PreDecode_validEnd_5", 0), self.dut.GetDPIHandle("PreDecode_validEnd_5", 1))
        self.PreDecode_h_validEnd_5.BindDPIPtr(self.dut.GetDPIHandle("PreDecode_h_validEnd_5", 0), self.dut.GetDPIHandle("PreDecode_h_validEnd_5", 1))
        self.PreDecode_validEnd_6.BindDPIPtr(self.dut.GetDPIHandle("PreDecode_validEnd_6", 0), self.dut.GetDPIHandle("PreDecode_validEnd_6", 1))
        self.PreDecode_h_validEnd_6.BindDPIPtr(self.dut.GetDPIHandle("PreDecode_h_validEnd_6", 0), self.dut.GetDPIHandle("PreDecode_h_validEnd_6", 1))
        self.PreDecode_validEnd_7.BindDPIPtr(self.dut.GetDPIHandle("PreDecode_validEnd_7", 0), self.dut.GetDPIHandle("PreDecode_validEnd_7", 1))
        self.PreDecode_h_validEnd_7.BindDPIPtr(self.dut.GetDPIHandle("PreDecode_h_validEnd_7", 0), self.dut.GetDPIHandle("PreDecode_h_validEnd_7", 1))
        self.PreDecode_lastIsValidEnd_23.BindDPIPtr(self.dut.GetDPIHandle("PreDecode_lastIsValidEnd_23", 0), self.dut.GetDPIHandle("PreDecode_lastIsValidEnd_23", 1))
        self.PreDecode_h_lastIsValidEnd_23.BindDPIPtr(self.dut.GetDPIHandle("PreDecode_h_lastIsValidEnd_23", 0), self.dut.GetDPIHandle("PreDecode_h_lastIsValidEnd_23", 1))
        self.PreDecode_lastIsValidEnd_24.BindDPIPtr(self.dut.GetDPIHandle("PreDecode_lastIsValidEnd_24", 0), self.dut.GetDPIHandle("PreDecode_lastIsValidEnd_24", 1))
        self.PreDecode_h_lastIsValidEnd_24.BindDPIPtr(self.dut.GetDPIHandle("PreDecode_h_lastIsValidEnd_24", 0), self.dut.GetDPIHandle("PreDecode_h_lastIsValidEnd_24", 1))
        self.PreDecode_lastIsValidEnd_25.BindDPIPtr(self.dut.GetDPIHandle("PreDecode_lastIsValidEnd_25", 0), self.dut.GetDPIHandle("PreDecode_lastIsValidEnd_25", 1))
        self.PreDecode_h_lastIsValidEnd_25.BindDPIPtr(self.dut.GetDPIHandle("PreDecode_h_lastIsValidEnd_25", 0), self.dut.GetDPIHandle("PreDecode_h_lastIsValidEnd_25", 1))
        self.PreDecode_lastIsValidEnd_26.BindDPIPtr(self.dut.GetDPIHandle("PreDecode_lastIsValidEnd_26", 0), self.dut.GetDPIHandle("PreDecode_lastIsValidEnd_26", 1))
        self.PreDecode_h_lastIsValidEnd_26.BindDPIPtr(self.dut.GetDPIHandle("PreDecode_h_lastIsValidEnd_26", 0), self.dut.GetDPIHandle("PreDecode_h_lastIsValidEnd_26", 1))
        self.PreDecode_lastIsValidEnd_27.BindDPIPtr(self.dut.GetDPIHandle("PreDecode_lastIsValidEnd_27", 0), self.dut.GetDPIHandle("PreDecode_lastIsValidEnd_27", 1))
        self.PreDecode_h_lastIsValidEnd_27.BindDPIPtr(self.dut.GetDPIHandle("PreDecode_h_lastIsValidEnd_27", 0), self.dut.GetDPIHandle("PreDecode_h_lastIsValidEnd_27", 1))
        self.PreDecode_lastIsValidEnd_30.BindDPIPtr(self.dut.GetDPIHandle("PreDecode_lastIsValidEnd_30", 0), self.dut.GetDPIHandle("PreDecode_lastIsValidEnd_30", 1))
        self.PreDecode_h_lastIsValidEnd_30.BindDPIPtr(self.dut.GetDPIHandle("PreDecode_h_lastIsValidEnd_30", 0), self.dut.GetDPIHandle("PreDecode_h_lastIsValidEnd_30", 1))
        self.PreDecode_lastIsValidEnd_31.BindDPIPtr(self.dut.GetDPIHandle("PreDecode_lastIsValidEnd_31", 0), self.dut.GetDPIHandle("PreDecode_lastIsValidEnd_31", 1))
        self.PreDecode_h_lastIsValidEnd_31.BindDPIPtr(self.dut.GetDPIHandle("PreDecode_h_lastIsValidEnd_31", 0), self.dut.GetDPIHandle("PreDecode_h_lastIsValidEnd_31", 1))
        self.PreDecode_lastIsValidEnd_32.BindDPIPtr(self.dut.GetDPIHandle("PreDecode_lastIsValidEnd_32", 0), self.dut.GetDPIHandle("PreDecode_lastIsValidEnd_32", 1))
        self.PreDecode_h_lastIsValidEnd_32.BindDPIPtr(self.dut.GetDPIHandle("PreDecode_h_lastIsValidEnd_32", 0), self.dut.GetDPIHandle("PreDecode_h_lastIsValidEnd_32", 1))
        self.PreDecode_lastIsValidEnd_33.BindDPIPtr(self.dut.GetDPIHandle("PreDecode_lastIsValidEnd_33", 0), self.dut.GetDPIHandle("PreDecode_lastIsValidEnd_33", 1))
        self.PreDecode_h_lastIsValidEnd_33.BindDPIPtr(self.dut.GetDPIHandle("PreDecode_h_lastIsValidEnd_33", 0), self.dut.GetDPIHandle("PreDecode_h_lastIsValidEnd_33", 1))


        # Add2Port
        self.xport.Add("io_in_bits_data_0", self.io_in_bits_data_0.xdata)
        self.xport.Add("io_in_bits_data_1", self.io_in_bits_data_1.xdata)
        self.xport.Add("io_in_bits_data_2", self.io_in_bits_data_2.xdata)
        self.xport.Add("io_in_bits_data_3", self.io_in_bits_data_3.xdata)
        self.xport.Add("io_in_bits_data_4", self.io_in_bits_data_4.xdata)
        self.xport.Add("io_in_bits_data_5", self.io_in_bits_data_5.xdata)
        self.xport.Add("io_in_bits_data_6", self.io_in_bits_data_6.xdata)
        self.xport.Add("io_in_bits_data_7", self.io_in_bits_data_7.xdata)
        self.xport.Add("io_in_bits_data_8", self.io_in_bits_data_8.xdata)
        self.xport.Add("io_in_bits_data_9", self.io_in_bits_data_9.xdata)
        self.xport.Add("io_in_bits_data_10", self.io_in_bits_data_10.xdata)
        self.xport.Add("io_in_bits_data_11", self.io_in_bits_data_11.xdata)
        self.xport.Add("io_in_bits_data_12", self.io_in_bits_data_12.xdata)
        self.xport.Add("io_in_bits_data_13", self.io_in_bits_data_13.xdata)
        self.xport.Add("io_in_bits_data_14", self.io_in_bits_data_14.xdata)
        self.xport.Add("io_in_bits_data_15", self.io_in_bits_data_15.xdata)
        self.xport.Add("io_in_bits_data_16", self.io_in_bits_data_16.xdata)
        self.xport.Add("io_out_pd_0_isRVC", self.io_out_pd_0_isRVC.xdata)
        self.xport.Add("io_out_pd_1_valid", self.io_out_pd_1_valid.xdata)
        self.xport.Add("io_out_pd_1_isRVC", self.io_out_pd_1_isRVC.xdata)
        self.xport.Add("io_out_pd_2_valid", self.io_out_pd_2_valid.xdata)
        self.xport.Add("io_out_pd_2_isRVC", self.io_out_pd_2_isRVC.xdata)
        self.xport.Add("io_out_pd_3_valid", self.io_out_pd_3_valid.xdata)
        self.xport.Add("io_out_pd_3_isRVC", self.io_out_pd_3_isRVC.xdata)
        self.xport.Add("io_out_pd_4_valid", self.io_out_pd_4_valid.xdata)
        self.xport.Add("io_out_pd_4_isRVC", self.io_out_pd_4_isRVC.xdata)
        self.xport.Add("io_out_pd_5_valid", self.io_out_pd_5_valid.xdata)
        self.xport.Add("io_out_pd_5_isRVC", self.io_out_pd_5_isRVC.xdata)
        self.xport.Add("io_out_pd_6_valid", self.io_out_pd_6_valid.xdata)
        self.xport.Add("io_out_pd_6_isRVC", self.io_out_pd_6_isRVC.xdata)
        self.xport.Add("io_out_pd_7_valid", self.io_out_pd_7_valid.xdata)
        self.xport.Add("io_out_pd_7_isRVC", self.io_out_pd_7_isRVC.xdata)
        self.xport.Add("io_out_pd_8_valid", self.io_out_pd_8_valid.xdata)
        self.xport.Add("io_out_pd_8_isRVC", self.io_out_pd_8_isRVC.xdata)
        self.xport.Add("io_out_pd_9_valid", self.io_out_pd_9_valid.xdata)
        self.xport.Add("io_out_pd_9_isRVC", self.io_out_pd_9_isRVC.xdata)
        self.xport.Add("io_out_pd_10_valid", self.io_out_pd_10_valid.xdata)
        self.xport.Add("io_out_pd_10_isRVC", self.io_out_pd_10_isRVC.xdata)
        self.xport.Add("io_out_pd_11_valid", self.io_out_pd_11_valid.xdata)
        self.xport.Add("io_out_pd_11_isRVC", self.io_out_pd_11_isRVC.xdata)
        self.xport.Add("io_out_pd_12_valid", self.io_out_pd_12_valid.xdata)
        self.xport.Add("io_out_pd_12_isRVC", self.io_out_pd_12_isRVC.xdata)
        self.xport.Add("io_out_pd_13_valid", self.io_out_pd_13_valid.xdata)
        self.xport.Add("io_out_pd_13_isRVC", self.io_out_pd_13_isRVC.xdata)
        self.xport.Add("io_out_pd_14_valid", self.io_out_pd_14_valid.xdata)
        self.xport.Add("io_out_pd_14_isRVC", self.io_out_pd_14_isRVC.xdata)
        self.xport.Add("io_out_pd_15_valid", self.io_out_pd_15_valid.xdata)
        self.xport.Add("io_out_pd_15_isRVC", self.io_out_pd_15_isRVC.xdata)
        self.xport.Add("io_out_hasHalfValid_2", self.io_out_hasHalfValid_2.xdata)
        self.xport.Add("io_out_hasHalfValid_3", self.io_out_hasHalfValid_3.xdata)
        self.xport.Add("io_out_hasHalfValid_4", self.io_out_hasHalfValid_4.xdata)
        self.xport.Add("io_out_hasHalfValid_5", self.io_out_hasHalfValid_5.xdata)
        self.xport.Add("io_out_hasHalfValid_6", self.io_out_hasHalfValid_6.xdata)
        self.xport.Add("io_out_hasHalfValid_7", self.io_out_hasHalfValid_7.xdata)
        self.xport.Add("io_out_hasHalfValid_8", self.io_out_hasHalfValid_8.xdata)
        self.xport.Add("io_out_hasHalfValid_9", self.io_out_hasHalfValid_9.xdata)
        self.xport.Add("io_out_hasHalfValid_10", self.io_out_hasHalfValid_10.xdata)
        self.xport.Add("io_out_hasHalfValid_11", self.io_out_hasHalfValid_11.xdata)
        self.xport.Add("io_out_hasHalfValid_12", self.io_out_hasHalfValid_12.xdata)
        self.xport.Add("io_out_hasHalfValid_13", self.io_out_hasHalfValid_13.xdata)
        self.xport.Add("io_out_hasHalfValid_14", self.io_out_hasHalfValid_14.xdata)
        self.xport.Add("io_out_hasHalfValid_15", self.io_out_hasHalfValid_15.xdata)
        self.xport.Add("io_out_instr_0", self.io_out_instr_0.xdata)
        self.xport.Add("io_out_instr_1", self.io_out_instr_1.xdata)
        self.xport.Add("io_out_instr_2", self.io_out_instr_2.xdata)
        self.xport.Add("io_out_instr_3", self.io_out_instr_3.xdata)
        self.xport.Add("io_out_instr_4", self.io_out_instr_4.xdata)
        self.xport.Add("io_out_instr_5", self.io_out_instr_5.xdata)
        self.xport.Add("io_out_instr_6", self.io_out_instr_6.xdata)
        self.xport.Add("io_out_instr_7", self.io_out_instr_7.xdata)
        self.xport.Add("io_out_instr_8", self.io_out_instr_8.xdata)
        self.xport.Add("io_out_instr_9", self.io_out_instr_9.xdata)
        self.xport.Add("io_out_instr_10", self.io_out_instr_10.xdata)
        self.xport.Add("io_out_instr_11", self.io_out_instr_11.xdata)
        self.xport.Add("io_out_instr_12", self.io_out_instr_12.xdata)
        self.xport.Add("io_out_instr_13", self.io_out_instr_13.xdata)
        self.xport.Add("io_out_instr_14", self.io_out_instr_14.xdata)
        self.xport.Add("io_out_instr_15", self.io_out_instr_15.xdata)
        self.xport.Add("io_out_jumpOffset_0", self.io_out_jumpOffset_0.xdata)
        self.xport.Add("io_out_jumpOffset_1", self.io_out_jumpOffset_1.xdata)
        self.xport.Add("io_out_jumpOffset_2", self.io_out_jumpOffset_2.xdata)
        self.xport.Add("io_out_jumpOffset_3", self.io_out_jumpOffset_3.xdata)
        self.xport.Add("io_out_jumpOffset_4", self.io_out_jumpOffset_4.xdata)
        self.xport.Add("io_out_jumpOffset_5", self.io_out_jumpOffset_5.xdata)
        self.xport.Add("io_out_jumpOffset_6", self.io_out_jumpOffset_6.xdata)
        self.xport.Add("io_out_jumpOffset_7", self.io_out_jumpOffset_7.xdata)
        self.xport.Add("io_out_jumpOffset_8", self.io_out_jumpOffset_8.xdata)
        self.xport.Add("io_out_jumpOffset_9", self.io_out_jumpOffset_9.xdata)
        self.xport.Add("io_out_jumpOffset_10", self.io_out_jumpOffset_10.xdata)
        self.xport.Add("io_out_jumpOffset_11", self.io_out_jumpOffset_11.xdata)
        self.xport.Add("io_out_jumpOffset_12", self.io_out_jumpOffset_12.xdata)
        self.xport.Add("io_out_jumpOffset_13", self.io_out_jumpOffset_13.xdata)
        self.xport.Add("io_out_jumpOffset_14", self.io_out_jumpOffset_14.xdata)
        self.xport.Add("io_out_jumpOffset_15", self.io_out_jumpOffset_15.xdata)
        self.xport.Add("PreDecode_currentIsRVC_0", self.PreDecode_currentIsRVC_0.xdata)
        self.xport.Add("PreDecode_currentIsRVC_1", self.PreDecode_currentIsRVC_1.xdata)
        self.xport.Add("PreDecode_currentIsRVC_2", self.PreDecode_currentIsRVC_2.xdata)
        self.xport.Add("PreDecode_currentIsRVC_3", self.PreDecode_currentIsRVC_3.xdata)
        self.xport.Add("PreDecode_currentIsRVC_4", self.PreDecode_currentIsRVC_4.xdata)
        self.xport.Add("PreDecode_currentIsRVC_5", self.PreDecode_currentIsRVC_5.xdata)
        self.xport.Add("PreDecode_currentIsRVC_6", self.PreDecode_currentIsRVC_6.xdata)
        self.xport.Add("PreDecode_currentIsRVC_7", self.PreDecode_currentIsRVC_7.xdata)
        self.xport.Add("PreDecode_currentIsRVC_8", self.PreDecode_currentIsRVC_8.xdata)
        self.xport.Add("PreDecode_currentIsRVC_9", self.PreDecode_currentIsRVC_9.xdata)
        self.xport.Add("PreDecode_currentIsRVC_10", self.PreDecode_currentIsRVC_10.xdata)
        self.xport.Add("PreDecode_currentIsRVC_11", self.PreDecode_currentIsRVC_11.xdata)
        self.xport.Add("PreDecode_currentIsRVC_12", self.PreDecode_currentIsRVC_12.xdata)
        self.xport.Add("PreDecode_currentIsRVC_13", self.PreDecode_currentIsRVC_13.xdata)
        self.xport.Add("PreDecode_currentIsRVC_14", self.PreDecode_currentIsRVC_14.xdata)
        self.xport.Add("PreDecode_currentIsRVC_15", self.PreDecode_currentIsRVC_15.xdata)
        self.xport.Add("PreDecode_validEnd_1", self.PreDecode_validEnd_1.xdata)
        self.xport.Add("PreDecode_validEnd_2", self.PreDecode_validEnd_2.xdata)
        self.xport.Add("PreDecode_h_validEnd_2", self.PreDecode_h_validEnd_2.xdata)
        self.xport.Add("PreDecode_validEnd_3", self.PreDecode_validEnd_3.xdata)
        self.xport.Add("PreDecode_h_validEnd_3", self.PreDecode_h_validEnd_3.xdata)
        self.xport.Add("PreDecode_validEnd_4", self.PreDecode_validEnd_4.xdata)
        self.xport.Add("PreDecode_h_validEnd_4", self.PreDecode_h_validEnd_4.xdata)
        self.xport.Add("PreDecode_validEnd_5", self.PreDecode_validEnd_5.xdata)
        self.xport.Add("PreDecode_h_validEnd_5", self.PreDecode_h_validEnd_5.xdata)
        self.xport.Add("PreDecode_validEnd_6", self.PreDecode_validEnd_6.xdata)
        self.xport.Add("PreDecode_h_validEnd_6", self.PreDecode_h_validEnd_6.xdata)
        self.xport.Add("PreDecode_validEnd_7", self.PreDecode_validEnd_7.xdata)
        self.xport.Add("PreDecode_h_validEnd_7", self.PreDecode_h_validEnd_7.xdata)
        self.xport.Add("PreDecode_lastIsValidEnd_23", self.PreDecode_lastIsValidEnd_23.xdata)
        self.xport.Add("PreDecode_h_lastIsValidEnd_23", self.PreDecode_h_lastIsValidEnd_23.xdata)
        self.xport.Add("PreDecode_lastIsValidEnd_24", self.PreDecode_lastIsValidEnd_24.xdata)
        self.xport.Add("PreDecode_h_lastIsValidEnd_24", self.PreDecode_h_lastIsValidEnd_24.xdata)
        self.xport.Add("PreDecode_lastIsValidEnd_25", self.PreDecode_lastIsValidEnd_25.xdata)
        self.xport.Add("PreDecode_h_lastIsValidEnd_25", self.PreDecode_h_lastIsValidEnd_25.xdata)
        self.xport.Add("PreDecode_lastIsValidEnd_26", self.PreDecode_lastIsValidEnd_26.xdata)
        self.xport.Add("PreDecode_h_lastIsValidEnd_26", self.PreDecode_h_lastIsValidEnd_26.xdata)
        self.xport.Add("PreDecode_lastIsValidEnd_27", self.PreDecode_lastIsValidEnd_27.xdata)
        self.xport.Add("PreDecode_h_lastIsValidEnd_27", self.PreDecode_h_lastIsValidEnd_27.xdata)
        self.xport.Add("PreDecode_lastIsValidEnd_30", self.PreDecode_lastIsValidEnd_30.xdata)
        self.xport.Add("PreDecode_h_lastIsValidEnd_30", self.PreDecode_h_lastIsValidEnd_30.xdata)
        self.xport.Add("PreDecode_lastIsValidEnd_31", self.PreDecode_lastIsValidEnd_31.xdata)
        self.xport.Add("PreDecode_h_lastIsValidEnd_31", self.PreDecode_h_lastIsValidEnd_31.xdata)
        self.xport.Add("PreDecode_lastIsValidEnd_32", self.PreDecode_lastIsValidEnd_32.xdata)
        self.xport.Add("PreDecode_h_lastIsValidEnd_32", self.PreDecode_h_lastIsValidEnd_32.xdata)
        self.xport.Add("PreDecode_lastIsValidEnd_33", self.PreDecode_lastIsValidEnd_33.xdata)
        self.xport.Add("PreDecode_h_lastIsValidEnd_33", self.PreDecode_h_lastIsValidEnd_33.xdata)


        # Cascaded ports
        self.PreDecode = self.xport.NewSubPort("PreDecode_")
        self.PreDecode_currentIsRVC = self.xport.NewSubPort("PreDecode_currentIsRVC_")
        self.PreDecode_h = self.xport.NewSubPort("PreDecode_h_")
        self.PreDecode_h_lastIsValidEnd = self.xport.NewSubPort("PreDecode_h_lastIsValidEnd_")
        self.PreDecode_h_validEnd = self.xport.NewSubPort("PreDecode_h_validEnd_")
        self.PreDecode_lastIsValidEnd = self.xport.NewSubPort("PreDecode_lastIsValidEnd_")
        self.PreDecode_validEnd = self.xport.NewSubPort("PreDecode_validEnd_")
        self.io = self.xport.NewSubPort("io_")
        self.io_in_bits_data = self.xport.NewSubPort("io_in_bits_data_")
        self.io_out = self.xport.NewSubPort("io_out_")
        self.io_out_hasHalfValid = self.xport.NewSubPort("io_out_hasHalfValid_")
        self.io_out_instr = self.xport.NewSubPort("io_out_instr_")
        self.io_out_jumpOffset = self.xport.NewSubPort("io_out_jumpOffset_")
        self.io_out_pd = self.xport.NewSubPort("io_out_pd_")
        self.io_out_pd_0 = self.xport.NewSubPort("io_out_pd_0_")
        self.io_out_pd_1 = self.xport.NewSubPort("io_out_pd_1_")
        self.io_out_pd_10 = self.xport.NewSubPort("io_out_pd_10_")
        self.io_out_pd_11 = self.xport.NewSubPort("io_out_pd_11_")
        self.io_out_pd_12 = self.xport.NewSubPort("io_out_pd_12_")
        self.io_out_pd_13 = self.xport.NewSubPort("io_out_pd_13_")
        self.io_out_pd_14 = self.xport.NewSubPort("io_out_pd_14_")
        self.io_out_pd_15 = self.xport.NewSubPort("io_out_pd_15_")
        self.io_out_pd_2 = self.xport.NewSubPort("io_out_pd_2_")
        self.io_out_pd_3 = self.xport.NewSubPort("io_out_pd_3_")
        self.io_out_pd_4 = self.xport.NewSubPort("io_out_pd_4_")
        self.io_out_pd_5 = self.xport.NewSubPort("io_out_pd_5_")
        self.io_out_pd_6 = self.xport.NewSubPort("io_out_pd_6_")
        self.io_out_pd_7 = self.xport.NewSubPort("io_out_pd_7_")
        self.io_out_pd_8 = self.xport.NewSubPort("io_out_pd_8_")
        self.io_out_pd_9 = self.xport.NewSubPort("io_out_pd_9_")


    def __del__(self):
        self.Finish()

    ################################
    #         User APIs            #
    ################################
    def InitClock(self, name: str):
        self.xclock.Add(self.xport[name])

    def Step(self, i:int = 1):
        self.xclock.Step(i)

    def StepRis(self, callback, args=(), kwargs={}):
        self.xclock.StepRis(callback, args, kwargs)

    def StepFal(self, callback, args=(), kwargs={}):
        self.xclock.StepFal(callback, args, kwargs)

    def SetWaveform(self, filename: str):
        self.dut.SetWaveform(filename)

    def SetCoverage(self, filename: str):
        self.dut.SetCoverage(filename)

    def Finish(self):
        self.dut.Finish()

    def RefreshComb(self):
        self.dut.RefreshComb()

    ################################
    #      End of User APIs        #
    ################################

    def __getitem__(self, key):
        return xsp.XPin(self.port[key], self.event)

    # Async APIs wrapped from XClock
    async def AStep(self,i: int):
        return await self.xclock.AStep(i)

    async def Acondition(self,fc_cheker):
        return await self.xclock.ACondition(fc_cheker)

    def RunStep(self,i: int):
        return self.xclock.RunStep(i)

    def __setattr__(self, name, value):
        assert not isinstance(getattr(self, name, None),
                              (xsp.XPin, xsp.XData)), \
        f"XPin and XData of DUT are read-only, do you mean to set the value of the signal? please use `{name}.value = ` instead."
        return super().__setattr__(name, value)


if __name__=="__main__":
    dut=DUTPreDecode()
    dut.Step(100)
